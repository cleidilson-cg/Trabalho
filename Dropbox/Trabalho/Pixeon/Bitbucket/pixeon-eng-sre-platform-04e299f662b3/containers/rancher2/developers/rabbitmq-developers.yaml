apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-developers
  namespace: developers
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azuredisk-premium-lrs
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-developers
  namespace: developers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-developers
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rabbitmq-developers
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: rabbitmq-developers
        image: "rabbitmq:3.6.5-management"
        ports:
        - containerPort: 5672
          name: rabbitmq-devel
        volumeMounts:
        - mountPath: "/var/lib/rabbitmq"
          name: rabbitmq-developers
        env:
        - name: "RABBITMQ_DEFAULT_PASS"
          value: "75Iidq3bMw"
        - name: "RABBITMQ_DEFAULT_USER"
          value: "admin"
      volumes:
        - name: rabbitmq-developers
          persistentVolumeClaim:
            claimName: rabbitmq-developers
      hostname: rabbitmq-developers
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-developers
  namespace: developers
spec:
  ports:
  - port: 5672
  selector:
    app: rabbitmq-developers
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-developers-web
  namespace: developers
spec:
  ports:
  - port: 15672
  selector:
    app: rabbitmq-developers
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-developers-svc
  namespace: developers
spec:
  type: LoadBalancer
  ports:
  - port: 5672
  selector:
    app: rabbitmq-developers